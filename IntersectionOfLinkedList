/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
          Set<ListNode> hs=new HashSet<>();
        while(headA!=null ){
            hs.add(headA);
                headA=headA.next;
            }
         while(headB!=null){
             if(hs.contains(headB))
             return headB;
             headB=headB.next;
         }   

        return null;
    }
}
















OR 





 public ListNode getIntersectionNode(ListNode head1, ListNode head2) {
        while (head2 != null){
            ListNode temp = head1;
            while (temp != null){
                if (temp == head2) return head2;
                temp = temp.next;
            }
            head2 = head2.next;
        }
        return null;
    }
}
